
class SpinnyShotgun : Actor {
	default {
		+NOINTERACTION;
		+ROLLSPRITE;
		+ROLLCENTER;
		+INTERPOLATEANGLES;
	}
	
	states {
		Spawn:
			CBRA A -1;
			stop;
	}
	
	override void Tick() {
		Super.Tick();
		
		if (master)
			Warp(master, xofs: 25, zofs: master.Height / 2., flags: WARPF_INTERPOLATE|WARPF_COPYPITCH|WARPF_COPYVELOCITY|WARPF_BOB|WARPF_NOCHECKPOSITION);
	}
}

class GrabSpinDesiredVel : Ammo {
	default {
		Inventory.MaxAmount Int.Max;
	}
}

class GrabSpinCurrentVel : Ammo {
	default {
		Inventory.MaxAmount Int.Max;
	}
}

class GrabSpinner : Fist {
	default {
		+Weapon.AMMO_OPTIONAL;
		Weapon.AmmoType "GrabSpinDesiredVel";
		Weapon.AmmoType2 "GrabSpinCurrentVel";
		Weapon.SlotNumber 3;
	}
	
	private Actor SpinningThing;
	private ActorSpinner Spinner;
	private bool Invert;
	private int InvertDebounceTime;
	
	override void BeginPlay() {
		Super.BeginPlay();
		Spinner.Accel = 1.;
	}
	
	override void Tick() {
		Super.Tick();
		
		if (SpinningThing)
			Spinner.Tick();
		
		Owner.A_SetInventory(AmmoType2, abs(Spinner.Vel));
		
		if (InvertDebounceTime > 0)
			InvertDebounceTime--;
		
		if (InvertDebounceTime == 0 && Owner.player && (Owner.player.buttons & BT_RELOAD)) {
			Invert = !Invert;
			InvertDebounceTime = 12;
		}
	}
	
	states {
		Fire:
			PUNG D 0 {
				invoker.SpinningThing = Spawn("SpinnyShotgun");
				invoker.SpinningThing.master = invoker.Owner;
				invoker.SpinningThing.SetXYZ(invoker.Owner.Pos);
				invoker.Spinner.Reset();
				invoker.Spinner.mo = invoker.SpinningThing;
				invoker.Spinner.DesVel = CountInv(invoker.AmmoType1);
				if (invoker.Invert)
					invoker.Spinner.DesVel = -invoker.Spinner.DesVel;
			}
			
		Hold:
			#### # 1;
			#### # 0 A_ReFire;
			
			#### # 0 { invoker.Spinner.DesVel = 0; invoker.Spinner.LandAt(0.); }
			#### # 1 A_JumpIf(!invoker.Spinner.IsLandingInProgress(), 1);
			wait;
			
			#### # 0 { invoker.SpinningThing.Destroy(); }
			goto Ready;
			
		AltFire:
			#### # 0 A_TakeInventory(invoker.AmmoType1);
			
		AltHold:
			#### # 1 A_GiveInventory(invoker.AmmoType1, 1);
			#### # 0 A_ReFire;
			goto Ready;
	}
}
